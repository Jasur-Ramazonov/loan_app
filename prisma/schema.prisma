generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String     @unique
  password      String?
  role          String?    @default("user")
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Debtor        Debtor[]
  Payments      Payments[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Debtor {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String
  name      String
  phone     String?
  totalDebt Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Payments  Payments[]
}

model Payments {
  id       String   @id @default(cuid())
  debtor   Debtor   @relation(fields: [debtorId], references: [id])
  debtorId String
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  amount   Int
  paidAt   DateTime @default(now())
}
